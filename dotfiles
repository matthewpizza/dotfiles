#!/usr/bin/env bash

export DOTFILES=$(cd -P -- $(dirname -- $BASH_SOURCE[0]) && pwd -P)
unix_name=$(uname)

is_installed() {
    if [ $1 == 'ripgrep' ]; then
        beepboop='rg'
    elif [ $1 == 'neovim' ]; then
        beepboop='nvim'
    else
        beepboop=$1
    fi

    command -v "$beepboop" > /dev/null
}

attempt_stow() {
    output=$(stow --verbose --restow --dir=$DOTFILES/files --target="$1" "$2" 2>&1)

    # restow, suppress output
    if [[ $output =~ 'UNLINK' ]]; then
        return
    fi

    EXISTING_TARGET='existing target is neither a link nor a directory: '

    if [[ ! $output =~ $EXISTING_TARGET ]]; then
        # Some other error
        echo "$output"
        return
    fi

    # Target file exists and cannot be symlinked
    file=$(echo "$output" | grep --max-count=1 --only-matching "$EXISTING_TARGET.*" | sed "s/$EXISTING_TARGET//")
    # ^could be more concise^

    # TODO: How to resolve?
    # Show diff
    # Backup and symlink
    # Delete and symlink
    # Choose version from diff
    echo "File exists, skipping: $1/$file"
}

if [ $unix_name == "Darwin" ]; then
    if ! is_installed brew; then
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        brew tap "homebrew/core"
        brew tap "homebrew/services"
    fi
    installer="brew"
elif [ $unix_name == "Linux" ]; then
    if is_installed yum; then
        installer="sudo yum -y"
    elif is_installed apt-get; then
        installer="sudo apt-get -y"
    fi
else
    echo "Something unexpected happened"
    exit 1
fi

# Install with package manager
while read package; do
    if ! is_installed $package; then
        $installer install $package
    fi
done < $DOTFILES/config/packages

# Custom installers
for installer in $DOTFILES/installers/*; do
    if [ -x $installer ] && [ ! -d $installer ]; then
        $installer
    fi
done

# OS-specific custom installers
if [ -d $DOTFILES/installers/$unix_name ]; then
    for installer in $DOTFILES/installers/$unix_name/*; do
        if [ -x $installer ]; then
            $installer
        fi
    done
fi

while read dotfile; do
    attempt_stow $HOME $dotfile
done < $DOTFILES/config/dotfiles

# macOS Application Support
if [ $unix_name == "Darwin" ]; then
    while read file; do
        attempt_stow "$HOME/Library/Application Support" $file
    done < $DOTFILES/config/library
fi
